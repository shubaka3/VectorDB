import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

from Milvus1 import milvus_utils as mvs
from Embedding.encoder import TextEncoder
from Embedding.config import EmbeddingConfig

encoder = TextEncoder(EmbeddingConfig(
    model_name="all-MiniLM-L6-v2",
    dim=384,
    device="cpu",
    log_level="INFO"
))

def choose_collection():
    collections = mvs.list_collections()
    if not collections:
        print("‚ùó Hi·ªán ch∆∞a c√≥ collection n√†o.")
        return None
    print("üì¶ Danh s√°ch collection:")
    for i, c in enumerate(collections):
        print(f"{i+1}. {c}")
    choice = input("Ch·ªçn collection theo s·ªë (ho·∫∑c 0 ƒë·ªÉ hu·ª∑): ").strip()
    if choice == "0":
        return None
    try:
        idx = int(choice) - 1
        if 0 <= idx < len(collections):
            return mvs.get_collection(collections[idx])
        else:
            print("‚ùó L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.")
            return None
    except:
        print("‚ùó L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.")
        return None

def main():
    current_collection = None
    current_collection_name = None

    while True:
        print("\nüß† MENU Milvus + Embedding")
        print(f"Collection hi·ªán t·∫°i: {current_collection_name if current_collection_name else 'Ch∆∞a ch·ªçn'}")
        print("1. T·∫°o collection m·ªõi")
        print("2. Ch·ªçn collection hi·ªán c√≥")
        print("3. Th√™m d·ªØ li·ªáu vƒÉn b·∫£n")
        print("4. T·∫°o index cho collection hi·ªán t·∫°i")
        print("5. Load collection")
        print("6. T√¨m vƒÉn b·∫£n t∆∞∆°ng t·ª±")
        print("7. Danh s√°ch collection")
        print("8. Xo√° collection")
        print("9. Xem d·ªØ li·ªáu trong collection")
        print("0. Tho√°t")

        choice = input("‚Üí Ch·ªçn: ").strip()

        if choice == "1":
            name = input("Nh·∫≠p t√™n collection m·ªõi: ").strip()
            current_collection = mvs.create_collection(name, dim=384)
            current_collection_name = name
            mvs.create_index(current_collection)
            mvs.load_collection(current_collection)  # Load lu√¥n sau khi t·∫°o
            print(f"‚úîÔ∏è Collection '{name}' ƒë√£ t·∫°o, t·∫°o index v√† load th√†nh c√¥ng.")
        
        elif choice == "2":
            col = choose_collection()
            if col:
                current_collection = col
                current_collection_name = col.name

                # T·∫°o index n·∫øu ch∆∞a c√≥
                if not current_collection.indexes:
                    print("‚ÑπÔ∏è Collection ch∆∞a c√≥ index, t·∫°o index t·ª± ƒë·ªông...")
                    mvs.create_index(current_collection)

                # Load collection ƒë·ªÉ search ƒë∆∞·ª£c
                mvs.load_collection(current_collection)

                print(f"‚úîÔ∏è ƒê√£ ch·ªçn v√† load collection '{current_collection_name}'")
            else:
                print("‚ùó Kh√¥ng thay ƒë·ªïi collection hi·ªán t·∫°i.")

        elif choice == "3":
            if current_collection is None:
                print("‚ùó H√£y t·∫°o ho·∫∑c ch·ªçn collection tr∆∞·ªõc.")
                continue
            text = input("Nh·∫≠p vƒÉn b·∫£n: ").strip()
            vector = encoder.get_vector(text)
            mvs.insert_vector(current_collection, vector, text)

        elif choice == "4":
            if current_collection:
                mvs.create_index(current_collection)
                print("‚úîÔ∏è ƒê√£ t·∫°o index cho collection.")
            else:
                print("‚ùó Kh√¥ng c√≥ collection n√†o ƒë·ªÉ t·∫°o index.")

        elif choice == "5":
            name = input("Nh·∫≠p t√™n collection ƒë·ªÉ load: ").strip()
            col = mvs.get_collection(name)
            if col:
                mvs.load_collection(col)
                current_collection = col
                current_collection_name = name
                print(f"‚úîÔ∏è ƒê√£ load collection '{name}'")
            else:
                print("‚ùó Collection kh√¥ng t·ªìn t·∫°i.")

        elif choice == "6":
            if current_collection:
                text = input("Nh·∫≠p vƒÉn b·∫£n c·∫ßn t√¨m: ").strip()
                vector = encoder.get_vector(text)
                mvs.search_topk(current_collection, vector)
            else:
                print("‚ùó Ch∆∞a ch·ªçn ho·∫∑c load collection.")

        elif choice == "7":
            collections = mvs.list_collections()
            if collections:
                print("üì¶ Danh s√°ch collection:")
                for c in collections:
                    print(f"- {c}")
            else:
                print("‚ùó Ch∆∞a c√≥ collection n√†o.")

        elif choice == "8":
            name = input("Nh·∫≠p t√™n collection c·∫ßn xo√°: ").strip()
            mvs.delete_collection(name)
            if current_collection_name == name:
                current_collection = None
                current_collection_name = None

        elif choice == "0":
            print("üëã Tho√°t.")
            break
        elif choice == "9":
            if current_collection:
                mvs.show_all_data(current_collection)
            else:
                print("‚ùó H√£y ch·ªçn collection tr∆∞·ªõc.")

        else:
            print("‚ùó L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.")


if __name__ == "__main__":
    main()
